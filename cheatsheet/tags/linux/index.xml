<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on Exploit-me.com - CheatSheet</title>
    <link>/cheatsheet/tags/linux/</link>
    <description>Recent content in linux on Exploit-me.com - CheatSheet</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 Apr 2022 13:50:49 +0200</lastBuildDate><atom:link href="/cheatsheet/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Resource Based Deligation via Impacket</title>
      <link>/cheatsheet/blog/resource-based-deligation-via-impacket/</link>
      <pubDate>Sun, 10 Apr 2022 13:50:49 +0200</pubDate>
      
      <guid>/cheatsheet/blog/resource-based-deligation-via-impacket/</guid>
      <description>#todo</description>
    </item>
    
    <item>
      <title>Executing Linux Binaries Without Touching Disk</title>
      <link>/cheatsheet/blog/executing-linux-binaries-without-touching-disk/</link>
      <pubDate>Fri, 08 Apr 2022 13:31:34 +0200</pubDate>
      
      <guid>/cheatsheet/blog/executing-linux-binaries-without-touching-disk/</guid>
      <description>Executing Linux Binaries Without Touching Disk Limitation This attack depends on the following tools to work.
dd bash | zsh | ash (busybox) setarch | linux64 (busybox) head tail cut grep od readlink wc tr base64 sleep Example of Running Dirty Pipe exploit in memory without touching the disk to gain root privielges. Running Dirty Pipe exploit on the target machine without touching the disk. Dirty pip exploit needs a setuid binary we will use /usr/bin/pkexec which is a setuid binary to gain privielge escalation.</description>
    </item>
    
    <item>
      <title>Linux Privilege Escalation</title>
      <link>/cheatsheet/blog/linux-privilege-escalation/</link>
      <pubDate>Fri, 03 Apr 2020 13:22:42 -0700</pubDate>
      
      <guid>/cheatsheet/blog/linux-privilege-escalation/</guid>
      <description>Stable your shell: python -c &amp;#39;import pty; pty.spawn(&amp;#34;/bin/bash&amp;#34;)&amp;#39; OR python3 -c &amp;#39;import pty; pty.spawn(&amp;#34;/bin/bash&amp;#34;)&amp;#39; export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/tmp export TERM=xterm-256color alias ll=&amp;#39;ls -lsaht --color=auto&amp;#39; Ctrl + Z [Background Process] stty raw -echo ; fg ; reset stty columns 200 rows 200 Various Capabilities? which gcc which cc which python which perl which wget which curl which fetch which nc which ncat which nc.traditional which socat Compilation file /bin/bash uname -a cat /etc/*-release cat /etc/issue What Arch ?</description>
    </item>
    
  </channel>
</rss>
