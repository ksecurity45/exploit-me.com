<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>offensive on exploit-me.com</title>
    <link>https://exploit-me.com/tags/offensive/</link>
    <description>Recent content in offensive on exploit-me.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 Apr 2022 13:50:49 +0200</lastBuildDate><atom:link href="https://exploit-me.com/tags/offensive/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Resource Based Deligation via Impacket</title>
      <link>https://exploit-me.com/blog/resource-based-deligation-via-impacket/</link>
      <pubDate>Sun, 10 Apr 2022 13:50:49 +0200</pubDate>
      
      <guid>https://exploit-me.com/blog/resource-based-deligation-via-impacket/</guid>
      <description>#todo</description>
    </item>
    
    <item>
      <title>Active Directory Exploitation Cheat Sheet</title>
      <link>https://exploit-me.com/blog/active-directory-exploitation/</link>
      <pubDate>Fri, 08 Apr 2022 21:03:54 +0200</pubDate>
      
      <guid>https://exploit-me.com/blog/active-directory-exploitation/</guid>
      <description>Active Directory Exploitation Cheat Sheet TODO</description>
    </item>
    
    <item>
      <title>Executing Linux Binaries Without Touching Disk</title>
      <link>https://exploit-me.com/blog/executing-linux-binaries-without-touching-disk/</link>
      <pubDate>Fri, 08 Apr 2022 13:31:34 +0200</pubDate>
      
      <guid>https://exploit-me.com/blog/executing-linux-binaries-without-touching-disk/</guid>
      <description>Executing Linux Binaries Without Touching Disk Limitation This attack depends on the following tools to work.
dd bash | zsh | ash (busybox) setarch | linux64 (busybox) head tail cut grep od readlink wc tr base64 sleep Example of Running Dirty Pipe exploit in memory without touching the disk to gain root privielges. Running Dirty Pipe exploit on the target machine without touching the disk. Dirty pip exploit needs a setuid binary we will use /usr/bin/pkexec which is a setuid binary to gain privielge escalation.</description>
    </item>
    
    <item>
      <title>CrackMapExec (a.k.a CME) </title>
      <link>https://exploit-me.com/blog/crackmapexec/</link>
      <pubDate>Thu, 07 Apr 2022 15:27:33 +0200</pubDate>
      
      <guid>https://exploit-me.com/blog/crackmapexec/</guid>
      <description>CrackMapExec # General help crackmapexec --help # Protocol help cracmapexec smb --help Connections &amp;amp; Spraying # Target format crackmapexec smb ms.evilcorp.org crackmapexec smb 192.168.1.0 192.168.0.2 crackmapexec smb 192.168.1.0-28 10.0.0.1-67 crackmapexec smb 192.168.1.0/24 crackmapexec smb targets.txt # Null session crackmapexec smb 192.168.10.1 -u &amp;#34;&amp;#34; up &amp;#34;&amp;#34; # Connect to target using local account crackmapexec smb 192.168.215.138 -u &amp;#39;Administrator&amp;#39; -p &amp;#39;PASSWORD&amp;#39; --local-auth # Pass the hash against a subnet crackmapexec smb 172.16.157.0/24 -u administrator -H &amp;#39;LMHASH:NTHASH&amp;#39; --local-auth crackmapexec smb 172.</description>
    </item>
    
    <item>
      <title>Windows Privilege Escalation.</title>
      <link>https://exploit-me.com/blog/windows-privilege-escalation/</link>
      <pubDate>Wed, 06 Apr 2022 11:28:59 +0200</pubDate>
      
      <guid>https://exploit-me.com/blog/windows-privilege-escalation/</guid>
      <description>Windows Privilege Escalation. EoP 0: System info Finding installed software, running processes, bind ports, and OS version might be critical to identify the right EoP vector.
Find installed patches, architecture, OS version $ systeminfo
Get exact OS version $ type C:/Windows/system32/eula.txt
Hostname. $ hostname
Find current user. $ echo %username%
List all users $ net users
Information about a user $ net users Administrator
Network information $ ipconfig /all &amp;amp; route print &amp;amp; arp -a</description>
    </item>
    
    <item>
      <title>Linux Privilege Escalation</title>
      <link>https://exploit-me.com/blog/linux-privilege-escalation/</link>
      <pubDate>Fri, 03 Apr 2020 13:22:42 -0700</pubDate>
      
      <guid>https://exploit-me.com/blog/linux-privilege-escalation/</guid>
      <description>Stable your shell: python -c &amp;#39;import pty; pty.spawn(&amp;#34;/bin/bash&amp;#34;)&amp;#39; OR python3 -c &amp;#39;import pty; pty.spawn(&amp;#34;/bin/bash&amp;#34;)&amp;#39; export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/tmp export TERM=xterm-256color alias ll=&amp;#39;ls -lsaht --color=auto&amp;#39; Ctrl + Z [Background Process] stty raw -echo ; fg ; reset stty columns 200 rows 200 Various Capabilities? which gcc which cc which python which perl which wget which curl which fetch which nc which ncat which nc.traditional which socat Compilation file /bin/bash uname -a cat /etc/*-release cat /etc/issue What Arch ?</description>
    </item>
    
  </channel>
</rss>
